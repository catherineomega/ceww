<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Author;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * AuthorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AuthorRepository extends EntityRepository
{
    
    /**
     * @param string $q
     * @return Query
     */
    public function searchQuery($q)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->where("a.fullName like '%$q%'");
        $qb->addOrderBy('a.sortableName');
        $query = $qb->getQuery();
        return $query;
    }
    
    public function next(Author $author)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->where('a.sortableName > :sortableName');
        $qb->orderBy('a.sortableName');
        $qb->setMaxResults(1);
        $qb->setParameter('sortableName', $author->getSortableName());
        $result = $qb->getQuery()->getResult();
        if (count($result) === 1) {
            return $result[0];
        }
        return null;
    }
    
    public function previous(Author $author)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->where('a.sortableName < :sortableName');
        $qb->orderBy('a.sortableName', 'DESC');
        $qb->setMaxResults(1);
        $qb->setParameter('sortableName', $author->getSortableName());
        $result = $qb->getQuery()->getResult();
        if (count($result) === 1) {
            return $result[0];
        }
        return null;
    }
}
